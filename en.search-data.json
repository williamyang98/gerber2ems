{"/gerber2ems/docs/":{"data":{"":" Installation Exporting PCB Configuration Running simulation Visualise results Visualise geometry Visualise fields "},"title":"Documentation"},"/gerber2ems/docs/configuration/":{"data":{"":"A single simulation configuration file in JSON is required to for gerber2ems.\nAn example of a configuration file can be found here: simulation.json","configuring-nanomesh#Configuring nanomesh":" Nanomesh is the python package that converts image files into a mesh to import into openEMS. Image files are generated by gerbv from Gerber files. Done since we cannot directly convert Gerber files into mesh data. Field Type Default Description nanomesh object nanomesh.quality int 5 Higher number means higher density mesh nanomesh.max_triangle_area float 10000 Maximum area for a triangle in the mesh in pixels nanomesh.min_spacing float 0.1 Minimum distance in millimeters where two regions in the image can be considered separate. Reduce this value if you notice bridging of traces in the final mesh output. nanomesh.max_edge_distance float 10000 Maximum distance of a triangle edge in pixels ","differential-pairs#Differential pairs":" Define list of differential pairs based on pairs of two simulation ports. Automatically calculate and generate graphs for that differential pair. All simulation port indices start from 0. Field Type Default Description differential_pairs list differential_pairs.name str “{start_p}{stop_p}{start_n}{stop_n}” Name of differential pair differential_pairs.start_p int Required Index of simulation port for start of positive trace differential_pairs.stop_p int Required Index of simulation port for end of positive trace differential_pairs.start_n int Required Index of simulation port for start of negative trace differential_pairs.stop_n int Required Index of simulation port for end of negative trace ","pcb-mesh-properties#PCB mesh properties":" Field Type Default Description mesh object mesh.xy float 200 Distance between mesh lines along x and y axis for PCB in microns mesh.inter_layers int 5 Number of default mesh lines along z axis for PCB in microns mesh.smoothing_ratio float 2 Factor to ease between differently spaced mesh lines mesh.margin.xy float 200 Distance in microns from x and y axis to add a mesh line mesh.margin.z float 200 Distance in microns from z axis to add a mesh line ","signal-properties#Signal properties":" Field Type Default Description frequency.start float 0.5e6 Start frequency of Gaussian pulse in Hz frequency.stop float 10e6 Stop frequency of Gaussian pulse in Hz ","signal-traces#Signal traces":" Define list of signal traces based on two simulation ports. Automatically calculate and generate graphs for that signal trace. All simulation port indices start from 0. Field Type Default Description traces list traces.name str “{start}{stop}” Name of signal trace traces.start int Required Index of simulation port for start of trace traces.stop int Required Index of simulation port for end of trace ","simulation-ports#Simulation ports":" Define list of simulation ports. Simulation ports are labelled SP{number} in exported component placement file (*-pos.csv). The index of the port (starting from 0) in this list corresponds to the exported simulation port. Field Type Default Description ports list ports.name str “Unnamed” Name of port ports.width float Required Width of port in microns ports.length float Required Length of port in microns ports.impedance float 50 Impedance of simulation port in ohms ports.layer int Required Metal layer starting from top down where signal trace is (0 indexed) ports.plane int Required Metal layer starting from top down where reference plane is (0 indexed) ports.excite bool false Should the port be simulated with an excitation pulse? ports.dB_margin float -15 S11 margin of port in decibels ","simulation-settings#Simulation settings":" Field Type Default Description max_steps int None Maximum number of simulation time steps. If nothing is provided then simulation continues until total energy in system approaches -60dB. margin.xy float 3000 Distance of air gap around x and y axis in microns margin.z float 3000 Distance of air gap around z axis in microns offset.x float 0 Distance to offset port locations along x axis in millimeters offset.y float 0 Distance to offset port locations along y axis in millimeters ","stackup-layers#Stackup layers":" Define list of layers that make up the PCB stackup. Includes copper and dielectric layers. Field Type Default Description layers list layers.name str None Name of layer layers.type str Required Type of layer: [copper, core] layers.file str None Name of Gerber file without extension and prefix (*-{name}.gbr) layers.thickness float 0 Thickness of layer in millimeters layers.export_field bool false Export field if --export-field was provided to gerber2ems layers.z_mesh_count int None Override the default number of z-mesh lines to add to layer layers.epsilon float Required Dielectric constant required for dielectric layers layers.priority int Defaults Priority of layer (higher priorities override lower priorities). By default metal layers have higher priority and override dielectric layers. Default material priorities Higher priority means it overrides lower priority materials.\nName Priority Simulation port 200 Via dielectric 101 Via metal 100 Metal layer 51 Dielectric layer 50 ","via-properties#Via properties":" Field Type Default Description via.filling_epsilon float 1 Dielectric constant of dielectric material that fills vias via.plating_thickness float 50 Thickness of via electro-deposited coating in microns "},"title":"Configuration"},"/gerber2ems/docs/export_pcb/":{"data":{"":"","exporting-from-kicad-80#Exporting from KiCAD 8.0":" Creating simulation ports Figure 5. KiCAD 8.0 simulation port properties Check to see if a component on the board is setup correctly to be imported as a simulation port into openEMS.\nSelect a footprint. Select properties. Check to see if the Reference and Value are set to SP{number} and Simulation_Port respectively. This should be done in the KiCAD schematic file by editing the properties on the component. You can create a library of simulation port cusotm footprints in KiCAD or reuse an inbuilt footprint. Change orientation if port is the orientation after being imported. Make sure that it is not excluded from the exported position files. Begin exporting files Use the following menu to export each of the required file types.\nFigure 1. KiCAD 8.0 file menu options for exporting design Export Gerber files Figure 2. KiCAD 8.0 export Gerber files dialog Select File \u003e Fabrication Outputs \u003e Gerbers (.gbr).... Choose output folder. Include layers that you want to export. Setup options. Press Plot to export gerber files to output folder. Export drill files Figure 3. KiCAD 8.0 generate drill files dialog Select Generate Drill Files... from previous Gerber files dialog box. Choose output folder. Setup options. Press Generate Drill File to export drill files to output folder. Export ports file Figure 4. KiCAD 8.0 generate placement files dialog Select File \u003e Fabrication Outputs \u003e Component Placement (.pos, .gbr).... Choose output folder. Setup options. Press Generate Position File to export ports to output folder. ","required-files#Required files":"These following files should be exported from your PCB design. This should be achievable from any PCB design software.\nGerber files (*.gbr) Specified geometry for copper layers is added to simulation (*_Cu.gbr). Edge cuts must be supplied (Edge_Cuts.gbr). Must be referenced to drill/place file origin. Uses the 4.6, unit mm coordinate format. Drill files (*.drl) Only plated through holes such as vias are added to simulation (PTH.drl). Must be referenced to dill/place file origin. Uses decimal format in millimeters. Excellon file format in alternate drill mode. Ports file (*-pos.csv) Only specially marked simulation ports are imported into simulation. Reference must be “SP{number}”. Value must be “Simulation_Port”. xy position: Must be in millimeters. Referenced to drill/place file origin. Only rotations of [0, 90, 180, 270] are allowed. File must be in csv format where first row is the header. Order of values is given in the following table. Ref Val Package PosX PosY Rot Side SP0 Simulation_Port * 0.4 2.5 * SP1 Simulation_Port * 0.6 2.5 * "},"title":"Exporting PCB"},"/gerber2ems/docs/installation/":{"data":{"":"","download-and-installation#Download and installation":"Following steps assume a bash shell (including git-bash).\nClone repository 1. Clone repositorygit clone --recursive https://github.com/williamyang98/gerber2ems.git 2. Change directory to repository locationcd gerber2ems Install openEMS and gerberv Windows Download binaries./vendor/download.sh Linux Install openEMS for linux. Install gerbv for linux. Setup Python virtual environment Only python 3.10 and 3.11 are supported by openEMS.\n1. Create virtual environmentpython -m venv venv 2. Activate virtual environmentsource ./venv/Scripts/activate 3. Add openEMS and gerbv binaries to path (windows only)source ./vendor/update_path.sh Install gerber2ems inside environment 1. Install gerber2emspip install -e . 2. Check if gerber2ems is installedgerber2ems -h Windows Warning\nTo fix missing DLL errors make sure to add openEMS binaries to the path.\nsource ./vendor/update_path.sh Linux Follow the openEMS installation instructions for the python interface here.\nAfter use shut down Python environment deactivate ","use-after-setup#Use after setup":" Activating environment Change directory to repositorycd gerber2ems Activate virtual environmentsource ./venv/Scripts/activate Add openEMS and gerberv binaries to path (Windows only)source ./vendor/update_path.sh Running gerber2ems gerber2ems [options] Deactivating environment deactivate "},"title":"Installation"},"/gerber2ems/docs/running/":{"data":{"":" Important\nMake sure that you have initialised the virtual environment following these instructions.","examples#Examples":"Consider an example where our directory has:\n./fab generated by KiCAD 8.0 according to these settings. ./simulation.json written according to these guidelines. Virtual environment has been activated according to these instructions. bash shell is already inside this directory. Run simulation and output to default locationgerber2ems -a Run simulation and input/output from custom locationsgerber2ems -c \"custom_simulation.json\" -i \"custom_fab/\" -o \"custom_results/\" -a Run geometry pass onlygerber2ems -g Run simulation pass onlygerber2ems -s Run postprocessing pass onlygerber2ems -p Run simulation with custom number of threadsgerber2ems -g --threads 16 Run simulation and export field datagerber2ems -g --export-field ","options#Options":"These are the arguments for gerber2ems\nOption Description -h --help Prints the help message. -c [file] --config [file] Specifies the location of the simulation configuration file. default: ./simulation.json -i [dir] --input [dir] Specifies the directory containing the exported Gerber, drill and simulation port files. default: ./fab -o [dir] --output [dir] Specifies the location of the: geometry data, simulation results, export E-fields, and post processed graphs. default: ./ems -g --geometry Flag to create geometry files for openEMS. -s --simulate Flag to run openEMS simulation. -p --postprocess Flag to process openEMS results into graphs. -a --all Flag to enable geometry, simulate and postprocess steps. --ef --export-field Flag to enable exporting field data if specified in layer config. -t [threads] --threads [threads] Number of threads that openEMS simulation will use. default: auto -d --debug Flag to enable debug level logging output. -l [level] --log [level] Set logging level: [DEBUG, INFO, WARNING, ERROR]. default: INFO "},"title":"Running simulation"},"/gerber2ems/docs/visualise_fields/":{"data":{"":"E-field data can be visualised with ParaView which is data visualisation software.","examples#Examples":"Differential pair Your browser does not support the video tag examples/differential Differential pair over hatched plane Your browser does not support the video tag examples/differential_hatched ","instructions#Instructions":" Important\nMake sure that you have initialised the virtual environment following these instructions.\nSetup configuration Make sure that your simulation.json configuration file has layers.export_field set to true for your desired layers as shown here.\nexamples/differential/simulation.json 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 \"layers\": [ { \"name\": \"F.Cu\", \"file\": \"F_Cu\", \"type\": \"copper\", \"thickness\": 0.035, \"export_field\": true }, { \"name\": \"Dielectric 1\", \"type\": \"core\", \"thickness\": 0.4, \"epsilon\": 4.6, \"export_field\": true }, { \"name\": \"B.Cu\", \"file\": \"B_Cu\", \"type\": \"copper\", \"thickness\": 0.035 } ] Run simulate with E-field export gerber2ems --simulate --export-field Open Paraview Download and open ParaView from here.\nLoad E-field data Find Pipeline Browser window. Right click inside it and click on Open in the context menu. Navigate to the location of your simulation data. By default it is ems/simulation/{number} {number} is the simulation port index which had an excitation pulse. Select the E-field group data. openEMS generates E-field data in the format of e_field_{index}_{timestep} {index} is the index of the layer in your configuration file which had export_field: true. {timestep} is the timestep in the openEMS simulation when the E-field was recorded. Paraview can load the data as a group for a given {index}. Press Ok to confirm selection. View E-field data Toggle E-field visibility by clicking on the eyeball. In the Properties window under the Coloring section select E-field as your colour source. Select the axis/magnitude of the E-field to view: [Magnitude, X, Y, Z]. Set range to render data There are three buttons to update the visualisation range.\nMethod Use case Auto range to current timestep Visualise data in full range to debug a single time step Custom range Manually set 0 as the centre of the range once minimum and maximum values were found through auto ranging Auto range to all timesteps Reliably visualise the data range across all time steps If scaling manually input values into the dialog box and press Ok to apply new scale values.\nSelect colour map Select colour map button. In the colour map presets window select a colour map. If you are visualising the [X,Y,Z] axes choosing a colour map with white in the middle is nicer. This is because the data will contain positive and negative values, where the zero point should be the middle of the colour map (white). If you are visualising the Magnitude selecting a colour map that is zeroed to the lowest value is better. Select Apply to apply colour map. Playing back timesteps Press the play button to begin replaying simulation data. Manually set the time step index to visualise a specific timestep. Go back and update the range if the colours are faded or overblown. Visualise copper layer Visualising the copper layer greatly enhances interpretability of E-field data.\nLoad image file of the layer from ems/geometry/*_Cu.png. Enable visibility. Set a data spacing range of 1e-5 to scale image down to size of E-field data. Apply data spacing and visually check if copper layer matches the size of the E-field data. Set the colour map to X-Ray or another colour map that suits you. Reduce the opacity so that the E-field data can be visualised through it. Update the range of the visualisation so that the copper layer appears correctly. "},"title":"Visualise fields"},"/gerber2ems/docs/visualise_geometry/":{"data":{"":"","#":" Geometry data can be visualised with AppCSXCad which should come pre-installed with openEMS. This is especially useful for confirming whether or not simulation ports are placed correctly. To correct for undesired offsets in the simulation port location adjust the offset.x and offset.y values in the configuration file as explained here. Important\nMake sure that you have initialised the virtual environment following these instructions.\nGenerate your geometry file with gerber2ems. gerber2ems --geometry Start AppCSXCad as a bash job. AppCSXCad.exe \u0026 Open generated geometry file Click File \u003e Load and select ./ems/geometry/geometry.xml in the dialog box.\nView geometry file Enable/disable visiblity on specific layers. Change to 2D or 3D views. Snap to different planes: [xy, xz, yz]. Use MIDDLE_MOUSE to pan. Use LEFT_MOUSE to orbit. Use RIGHT_MOUSE to zoom. Figure 6. AppCSXCad screenshot "},"title":"Visualise geometry"},"/gerber2ems/docs/visualise_results/":{"data":{"":"","instructions#Instructions":"Run the simulation with post processing as shown here.\nRun simulation and output to default locationgerber2ems -a Results of post processing should be stored in ems/results/*.png. The ems folder is controlled by the --output argument to gerbv which is explained here ","post-processed-results#Post processed results":" S parameters are calculated for all excited ports. Impedance of signal trace or differential pair is calculated. Propagation delay Figure 7. Propagation delay of differential pairs S-parameters Figure 8. S parameters for port 1 Figure 9. S parameters for port 3 Figure 10. Smith chart for S11 parameter Figure 10. Smith chart for S33 parameter Figure 11. Differential pair S parameters Characteristic impedance Figure 12. Impedance of differential pair trace 1 Figure 13. Impedance of differential pair trace 3 Figure 14. Combined impedance of differential pair "},"title":"Visualise results"}}